@use '../abstracts/mixins.scss' as *;

.entry {
  background-color: hsla(var(--clr-dark-800), 1);
  padding: 0;
  overflow: hidden;
  display: block;

  & .brief {
    width: 100%;
    display: grid;
    grid-template-columns: min-content 1fr auto;
    padding: var(--base-size) calc(var(--base-size) * 2);
    gap: 0 calc(var(--base-size) * 2);

    @include mq(tiny) {
      grid-template-columns:
        min-content
        minmax(3rem, auto)
        3rem
        calc((var(--base-size) * 3) * 3 + 2 * var(--base-size));
    }

    @include mq(small) {
      grid-template-columns:
        min-content
        minmax(3rem, auto)
        8rem
        calc((var(--base-size) * 3) * 3 + 2 * var(--base-size));
    }

    & .dropdown {
      grid-column: 1;
      grid-row: 1 / 3;

      @include mq(tiny) {

      }
    }

    & .name,
    & .entries {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      width: 100%;
    }

    & .entries {
      color: hsla(var(--clr-dark-300), 1);
      font-weight: 500;

      @include mq(tiny) {
        color: inherit;
        font-weight: inherit;
        padding-left: 0.5rem;
      }

      & .entries-text {
        @include mq(tiny) {
          display: none;
        }

        @include mq(small) {
          display: inline;
        }
      }
    }

    & .name {
      font-size: var(--fs-500);
      margin-bottom: var(--base-size);

      @include mq(tiny) {
        font-size: var(--font-size, --fs-normal);
        margin-bottom: 0;
      }
    }

    & .percentage {
      grid-column: 2 / 3;
      color: hsla(var(--clr-dark-300), 1);
      font-weight: 500;

      @include mq(tiny) {
        display: none;
      }
    }

    & .actions {
      user-select: none;
      display: grid;
      gap: var(--base-size);
      justify-items: center;
      align-items: center;
      opacity: 0.3;
      transition: opacity 150ms ease-in;
      // transition: none;

      grid-row: 1 / 4;
      grid-column: 3 / 4;
      grid-template-columns: auto;

      @include mq(tiny) {
        justify-self: right;
        grid-template-columns: auto auto auto;
        grid-row: auto;
        grid-column: auto;
      }

      &:hover {
        color: hsla(var(--clr-dark-500), 1);

        .darkmode & {
          color: hsla(var(--clr-light-300), 1);
        }
      }

      & > .icon {
        transition: color 150ms ease-in;

        &:hover {
          color: hsla(var(--clr-dark-100), 1);
          transition: none;

          .darkmode & {
            color: hsla(var(--clr-light-800), 1);
          }
        }
      }
    }
  }

  &:hover {
    // background-color: hsla(var(--clr-dark-700), 1);

    & > .actions {
      opacity: 1;
      transition: none;
      // transition: opacity 150ms ease-in;
    }
  }

  & .details {
    width: 100%;
    overflow-y: hidden;
    padding: var(--base-size) calc(var(--base-size) * 2);
    font-weight: 400;

    &:not(.opened) {
      height: 0;
      padding-top: 0;
      padding-bottom: 0;
    }

    & .title {
      font-weight: 600;
      // font-size: var(--fs-500);
      margin-top: calc(var(--base-size) * 2);
    }

    & .methods {
      padding-left: calc(var(--base-size) * 1.5);

      @include pseudo() {
        height: 100%;
        right: auto;
        width: calc(var(--border-width) * 2);
        background-color: hsla(var(--clr-dark-100), .2);
      }
    }
  }

  .darkmode & {
    background-color: hsla(var(--clr-dark-200), 1);
    border-color: hsla(var(--clr-dark-200), 1);
  }
}
