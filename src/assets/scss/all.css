@charset "UTF-8";
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@800;900&family=Roboto+Mono:wght@400;500&family=Roboto:wght@400;900&display=swap");
@import url("https://fonts.googleapis.com/icon?family=Material+Icons");
:root {
  --section-spacing: 3.5rem;
  --wrapper-padding: 1rem;
  --border-width: 2px;
  --base-size: .5rem;
  --max-width: 1300px;
  --clr-dark-100: 240, 10%, 4%;
  --clr-dark-200: 240, 7%, 14%;
  --clr-dark-300: 240, 7%, 24%;
  --clr-dark-400: 240, 7%, 34%;
  --clr-dark-500: 240, 7%, 44%;
  --clr-dark-600: 240, 7%, 54%;
  --clr-dark-700: 240, 7%, 64%;
  --clr-dark-800: 240, 11%, 74%;
  --clr-light-100: 0, 0%, 36%;
  --clr-light-200: 0, 0%, 46%;
  --clr-light-300: 0, 0%, 56%;
  --clr-light-400: 0, 0%, 66%;
  --clr-light-500: 0, 0%, 76%;
  --clr-light-600: 0, 0%, 86%;
  --clr-light-700: 0, 0%, 91%;
  --clr-light-800: 0, 0%, 96%;
  --clr-accent-100: 264, 100%, 34%;
  --clr-accent-200: 264, 100%, 44%;
  --clr-accent-300: 264, 100%, 54%;
  --clr-accent-400: 264, 100%, 64%;
  --clr-accent-500: 264, 100%, 71%;
  --clr-accent-600: 264, 100%, 74%;
  --clr-accent-700: 264, 100%, 84%;
  --clr-accent-800: 265, 100%, 94%;
  --clr-special-warning: 37, 89%, 67%;
  --clr-special-danger: 4, 89%, 67%;
  --clr-special-success: 107, 89%, 67%;
  --clr-special-info: 196, 89%, 67%;
  --fs-normal: 1rem;
  --fs-500: 1.125rem;
  --fs-400: 1.563rem;
  --fs-300: 1.953rem;
  --fs-200: 2.441rem;
  --fs-100: 3.052rem;
}
@media only screen and (min-width: 40em) {
  :root {
    --section-spacing: 10rem;
  }
}
@media only screen and (min-width: 40em) {
  :root {
    --fs-normal: 1rem;
    --fs-500: 1.25rem;
    --fs-400: 2rem;
    --fs-300: 2.827rem;
    --fs-200: 4rem;
    --fs-100: 5.653rem;
  }
}

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/*color inheritance*/
* {
  color: currentColor;
  background-color: inherit;
}

/*background color inheritance for text elements*/
/*
span,
p, 
h1,
h2,
h3,
h4,
h5,
h6 {
  background-color: inherit;
}*/
/* Remove default margin */
body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role=list],
ol[role=list] {
  list-style: none;
  padding: 0;
  margin: 0;
}

/* Set core root defaults */
html {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  text-rendering: optimizeSpeed;
  line-height: 1.6;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
  user-select: none;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html {
    scroll-behavior: auto;
  }

  *,
*::before,
*::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
.notransitions *,
.notransitions *::before,
.notransitions *::after {
  animation-duration: 0.01ms !important;
  animation-iteration-count: 1 !important;
  transition-duration: 0.01ms !important;
  scroll-behavior: auto !important;
}

h1,
.h1 {
  --font-size: var(--fs-100);
  text-transform: uppercase;
  font-family: "Poppins";
  font-weight: 900;
  display: block;
  line-height: 1.1;
}

h2,
.h2 {
  --font-size: var(--fs-200);
  text-transform: uppercase;
  font-family: "Poppins";
  font-weight: 900;
  display: block;
  line-height: 1.1;
}

h3,
.h3 {
  --font-size: var(--fs-300);
  text-transform: uppercase;
  font-family: "Poppins";
  font-weight: 900;
  display: block;
  line-height: 1.1;
}

h4,
.h4 {
  --font-size: var(--fs-400);
  text-transform: uppercase;
  font-family: "Poppins";
  font-weight: 900;
  display: block;
  line-height: 1.1;
}

h5,
.h5 {
  --font-size: var(--fs-500);
  text-transform: uppercase;
  font-family: "Poppins";
  font-weight: 900;
  display: block;
  line-height: 1.1;
}

body {
  font-family: "Roboto Mono";
  font-weight: 900;
}

:where(*) {
  font-family: inherit;
  font-weight: inherit;
  word-break: break-word;
  font-size: var(--font-size, --fs-normal);
}

:where(.mono) {
  font-family: "Roboto Mono";
  font-weight: 400;
}

:where(svg) {
  fill: hsla(var(--clr-dark-100), 1);
}
:where(svg) :where(*) {
  fill: inherit;
}

article {
  max-width: 75ch;
}

:where(a:not(.underline)) {
  text-decoration: none;
}

strong, b {
  font-weight: 900;
}

body {
  background-color: hsla(var(--clr-light-800), 1);
  color: hsla(var(--clr-dark-100), 1);
}
.darkmode body {
  background-color: hsla(var(--clr-dark-100), 1);
  color: hsla(var(--clr-light-700), 1);
}

::-moz-selection {
  color: hsla(var(--clr-dark-200), 1);
  background-color: hsla(var(--clr-accent-700), 1);
}

::selection {
  color: hsla(var(--clr-dark-200), 1);
  background-color: hsla(var(--clr-accent-700), 1);
}

/* width */
::-webkit-scrollbar {
  width: calc(var(--base-size) * 1);
}

/* Track */
::-webkit-scrollbar-track {
  background: hsla(var(--clr-light-600), 1);
  border-radius: var(--border-width);
}
.darkmode ::-webkit-scrollbar-track {
  background: hsla(var(--clr-dark-400), 1);
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: hsla(var(--clr-accent-500), 1);
  border-radius: var(--border-width);
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: hsla(var(--clr-accent-600), 1);
}

:where(.grid-column) {
  display: grid;
  grid-template-columns: 1fr;
  grid-auto-rows: auto;
  gap: var(--section-spacing);
}

.all {
  min-height: 100vh;
  width: 100%;
  padding: 0 var(--wrapper-padding);
  max-width: var(--max-width);
  margin: 0 auto;
  display: grid;
  align-items: flex-start;
  align-content: flex-start;
  grid-template-rows: auto 1fr auto;
}

:where(.row) {
  display: flex;
}

:where(.header) {
  display: grid;
  align-content: flex-start;
  justify-content: stretch;
  justify-items: flex-start;
  padding: 3rem 0;
}

:where(.main) {
  display: grid;
  gap: calc(var(--base-size) * 2);
}
:where(.main) > .row {
  display: grid;
  gap: calc(var(--base-size) * 8);
  grid-template-columns: 1fr;
  grid-template-areas: "adder" "list";
  /*@include mq(medium) {
    grid-template-columns: 6fr 5fr;
    grid-template-areas: "list adder";
  }*/
}
:where(.main) > .main-grid {
  display: grid;
  gap: calc(var(--base-size) * 4);
  align-self: start;
  justify-items: stretch;
  align-items: flex-start;
  grid-template-columns: 1fr;
  grid-template-areas: "addOne" "addMultiple" "alerts" "list";
}
@media only screen and (min-width: 65em) {
  :where(.main) > .main-grid {
    grid-template-columns: 6fr 5fr;
    grid-template-areas: "addOne alerts" "addMultiple alerts" "list alerts";
  }
}

:where(.footer) {
  --spacing: 3rem;
  display: grid;
  padding: var(--spacing) 0;
  gap: var(--spacing);
}

:where(section) {
  --section-spacing: 1.6rem;
}
:where(section) *:where(.text) {
  --section-spacing: 0.6rem;
}
:where(.nav) {
  display: flex;
  align-items: center;
  gap: calc(var(--base-size) * 2);
}

.item, .alert, form input, form textarea, :where(.button) {
  width: 100%;
  border: solid var(--border-width) hsla(var(--clr-dark-100), 1);
  border-radius: var(--base-size);
  padding: var(--base-size) calc(var(--base-size) * 2);
  display: grid;
  gap: calc(var(--base-size) * 2);
  grid-template-columns: minmax(3rem, auto) 3rem 4rem calc((var(--base-size) * 3) * 3 + 2 * var(--base-size));
  justify-items: left;
  align-items: center;
}
@media only screen and (min-width: 40em) {
  .item, .alert, form input, form textarea, :where(.button) {
    grid-template-columns: minmax(3rem, auto) 8rem 4rem calc((var(--base-size) * 3) * 3 + 2 * var(--base-size));
  }
  .item .entries-text, .alert .entries-text, form input .entries-text, form textarea .entries-text, :where(.button) .entries-text {
    display: inline;
  }
}
.item > .name, .alert > .name, form input > .name, form textarea > .name, :where(.button) > .name, .item > .entries, .alert > .entries, form input > .entries, form textarea > .entries, :where(.button) > .entries {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  width: 100%;
}
.item .entries, .alert .entries, form input .entries, form textarea .entries, :where(.button) .entries {
  padding-left: 0.5rem;
}
.item .entries .entries-text, .alert .entries .entries-text, form input .entries .entries-text, form textarea .entries .entries-text, :where(.button) .entries .entries-text {
  display: none;
}
@media only screen and (min-width: 40em) {
  .item .entries .entries-text, .alert .entries .entries-text, form input .entries .entries-text, form textarea .entries .entries-text, :where(.button) .entries .entries-text {
    display: inline;
  }
}
.item:hover > .actions, .alert:hover > .actions, form input:hover > .actions, form textarea:hover > .actions, :hover:where(.button) > .actions {
  opacity: 1;
  transition: none;
}
.item > .actions, .alert > .actions, form input > .actions, form textarea > .actions, :where(.button) > .actions {
  justify-self: right;
  user-select: none;
  display: grid;
  gap: var(--base-size);
  grid-template-columns: auto auto auto;
  justify-items: center;
  align-items: center;
  opacity: 0.3;
  transition: opacity 150ms ease-in;
}
.item > .actions:hover, .alert > .actions:hover, form input > .actions:hover, form textarea > .actions:hover, :where(.button) > .actions:hover {
  color: hsla(var(--clr-dark-500), 1);
}
.darkmode .item > .actions:hover, .darkmode .alert > .actions:hover, .darkmode form input > .actions:hover, form .darkmode input > .actions:hover, .darkmode form textarea > .actions:hover, form .darkmode textarea > .actions:hover, .darkmode :where(.button) > .actions:hover {
  color: hsla(var(--clr-light-300), 1);
}
.item > .actions > .icon, .alert > .actions > .icon, form input > .actions > .icon, form textarea > .actions > .icon, :where(.button) > .actions > .icon {
  transition: color 150ms ease-in;
}
.item > .actions > .icon:hover, .alert > .actions > .icon:hover, form input > .actions > .icon:hover, form textarea > .actions > .icon:hover, :where(.button) > .actions > .icon:hover {
  color: hsla(var(--clr-dark-100), 1);
  transition: none;
}
.darkmode .item > .actions > .icon:hover, .darkmode .alert > .actions > .icon:hover, .darkmode form input > .actions > .icon:hover, form .darkmode input > .actions > .icon:hover, .darkmode form textarea > .actions > .icon:hover, form .darkmode textarea > .actions > .icon:hover, .darkmode :where(.button) > .actions > .icon:hover {
  color: hsla(var(--clr-light-800), 1);
}
.darkmode .item, .darkmode .alert, .darkmode form input, form .darkmode input, .darkmode form textarea, form .darkmode textarea, .darkmode :where(.button) {
  border-color: hsla(var(--clr-dark-400), 1);
}

:where(.icon) {
  background-color: transparent;
  color: inherit;
  display: grid;
  place-content: center;
}
:where(.icon).inline {
  transform: translateY(0.3em);
}
:where(.icon).clickable {
  cursor: pointer;
  user-select: none;
}
:where(.icon).bold {
  font-weight: 900;
}
:where(.icon).padding {
  padding: var(--base-size);
  border-radius: var(--base-size);
  user-select: none;
}
:where(.icon).state {
  transition: background-color 150ms ease-in-out;
  background-color: hsla(var(--clr-light-600), 1);
}
.darkmode :where(.icon).state {
  background-color: hsla(var(--clr-dark-300), 1);
  color: hsla(var(--clr-dark-100), 1);
}
:where(.icon).state > span {
  transition: opacity 150ms ease-in-out, transform 150ms cubic-bezier(0.6, 0.1, 0.6, 1.5);
  transform: scale(0.5);
  display: block;
  opacity: 0;
}
:where(.icon).state.active {
  background-color: var(--clr-special-danger);
}
:where(.icon).state.active.success {
  background-color: var(--clr-special-success);
}
:where(.icon).state.active > span {
  opacity: 1;
  transform: scale(1);
}

:where(.button) {
  --bg: hsla(var(--clr-accent-700), 1);
  color: hsla(var(--clr-dark-100), 1);
  grid-template-columns: auto 1fr;
  gap: calc(var(--base-size) * 1);
  justify-items: left;
  width: fit-content;
  user-select: none;
  text-align: left;
  cursor: pointer;
  border-color: var(--bg);
  background-color: var(--bg);
  transition: background-color 150ms ease-in, border-color 150ms ease-in;
}
:where(.button) .arrow {
  display: block;
}
@media only screen and (min-width: 40em) {
  :where(.button) .arrow {
    display: none;
  }
}
:where(.button):hover {
  --bg: hsla(var(--clr-accent-600), 1);
}
:where(.button):hover .arrow > svg, :where(.button):hover:focus > svg {
  animation: arrow-out 150ms ease-in 0ms 1 forwards, arrow-in 200ms cubic-bezier(0.33, 0.33, 1, 0.66) 150ms 1 forwards;
}
:where(.button):hover.rotate .btn-icon > * {
  animation: icon-rotate 350ms ease-in-out 1 forwards;
}
:where(.button) .btn-icon {
  overflow: hidden;
  width: auto;
  max-width: 4rem;
  height: 100%;
  justify-self: left;
  align-self: stretch;
  display: grid;
  place-content: center;
  background-color: transparent;
}
:where(.button) .btn-icon.arrow {
  padding: 0.3rem;
}
:where(.button).primary {
  --bg: hsla(var(--clr-accent-400), 1);
  color: hsla(var(--clr-light-800), 1);
}
:where(.button).primary:hover {
  --bg: hsla(var(--clr-accent-300), 1);
}
:where(.button).primary .arrow {
  transform: rotate(-90deg);
  filter: invert(99%) sepia(15%) saturate(0%) hue-rotate(233deg) brightness(112%) contrast(92%);
}
:where(.button).blank {
  background-color: transparent;
  padding: 0;
  border: none;
  color: inherit;
}
:where(.button).blank.inline {
  display: inline-block;
}
:where(.button).block {
  display: block;
}
:where(.button).full {
  width: 100%;
}
:where(.button).full .btn-icon {
  justify-self: right;
}
:where(.button).auto .btn-icon {
  justify-self: right;
}
:where(.button).half {
  width: 50%;
}
:where(.button).half .btn-icon {
  justify-self: right;
}
:where(.button).back .btn-icon {
  grid-column: 1;
  grid-row: 1;
  transform: rotate(-180deg);
}
.darkmode :where(.button) {
  border-color: var(--bg);
}

:where(.buttons) {
  display: flex;
  gap: calc(var(--base-size) * 2);
}
:where(.buttons) > .button {
  flex-grow: 1;
}

@keyframes arrow-out {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(1rem, 1rem);
  }
}
@keyframes arrow-in {
  0% {
    transform: translate(-1rem, -1rem);
  }
  100% {
    transform: translate(0, 0);
  }
}
@keyframes icon-rotate {
  100% {
    transform: rotate(360deg);
  }
}
footer.footer {
  max-width: calc(var(--base-size) * 100);
  grid-template-columns: 1fr auto;
}
footer.footer .options {
  font-weight: 400;
  display: flex;
  text-align: right;
  justify-items: right;
  flex-direction: column;
  align-items: flex-end;
}
footer.footer .options.inline {
  flex-direction: row;
  align-items: flex-start;
  gap: var(--base-size);
}

/*.adder {
  display: grid;
  gap: calc(var(--base-size) * 4);
  grid-area: adder;
  align-self: start;

  grid-template-columns: 1fr;
  justify-items: stretch;
  align-items: flex-start;
  //align-items: stretch;

  @include mq(medium) {
    grid-template-columns: 6fr 5fr;

    & .alerts {
      grid-row: 1 / 3;
      grid-column: 2 / 3;
    }
  }
}*/
form {
  display: grid;
  gap: calc(var(--base-size) * 2);
  grid-column: 1;
  max-width: calc(var(--base-size) * 100);
}
@media only screen and (min-width: 65em) {
  form {
    width: calc(var(--base-size) * 100);
  }
}
form .row {
  display: grid;
  grid-template-columns: 1fr;
  gap: var(--base-size);
}
@media only screen and (min-width: 40em) {
  form .row {
    grid-template-columns: 2fr minmax(5rem, 1fr);
  }
}
form .label-group {
  position: relative;
}
form .label-group:focus label, form .label-group:focus-within label {
  opacity: 0;
}
form .label-group label {
  position: absolute;
  user-select: none;
  top: calc(var(--base-size) + .1em);
  left: calc(var(--base-size) * 2 + .2em);
  pointer-events: none;
  transition: opacity 150ms ease-in;
  opacity: 1;
}
form .label-group label:not([data-value=false]) {
  opacity: 0;
}
form input, form textarea {
  background-color: inherit;
  border-style: dashed;
  resize: vertical;
}
form .buttons {
  display: grid;
  grid-template-columns: 1fr auto;
  gap: var(--base-size);
}

:where(input, textarea) {
  padding: var(--base-size) calc(var(--base-size) * 2);
  border: solid 2px hsla(var(--clr-light-700), 1);
  border-radius: 0.2rem;
  max-height: 12rem;
}
:where(input, textarea):focus, :where(input, textarea):focus-within, :where(input, textarea):active,
:where(input, textarea) :focus-visible {
  border: solid 2px hsla(var(--clr-accent-700), 1);
  outline: none;
}

.list {
  grid-area: list;
  align-self: start;
  display: grid;
  gap: calc(var(--base-size) * 2);
  max-width: calc(var(--base-size) * 100);
}
.list > ul {
  display: grid;
  align-content: flex-start;
  gap: var(--base-size);
  /*
  @include mq(medium) {
    height: 25.5rem;
  }*/
}
.list .list-item {
  background-color: hsla(var(--clr-dark-800), 1);
}
.darkmode .list .list-item {
  background-color: hsla(var(--clr-dark-200), 1);
  border-color: hsla(var(--clr-dark-200), 1);
}
.list.large > ul {
  overflow-y: scroll;
  padding-right: calc(var(--base-size) * 2);
  height: auto;
  max-height: min(calc(45px * 7 + var(--base-size) * 6), 75vh);
}

.alerts {
  display: grid;
  gap: var(--base-size);
  grid-area: alerts;
  max-width: calc(var(--base-size) * 100);
}

.alert {
  grid-template-columns: 1fr;
  position: relative;
  padding-right: calc(var(--base-size) * 4);
  color: hsla(var(--clr-dark-100), 1);
}
.alert.danger {
  background-color: var(--clr-special-danger);
  border-color: var(--clr-special-danger);
}
.alert.warning {
  background-color: var(--clr-special-warning);
  border-color: var(--clr-special-warning);
}
.alert.success {
  background-color: var(--clr-special-success);
  border-color: var(--clr-special-success);
}
.alert.info {
  background-color: var(--clr-special-info);
  border-color: var(--clr-special-info);
}
.alert > .icon {
  position: absolute;
  right: var(--base-size);
  top: var(--base-size);
  opacity: 0.3;
  transition: opacity 150ms ease-in;
}
.alert > .icon:hover {
  opacity: 1;
}

.calculation {
  display: grid;
  gap: calc(var(--base-size) * 2);
  grid-template-rows: 1fr auto;
  align-content: flex-start;
}
.calculation > .wrapper {
  background-color: hsla(var(--clr-light-700), 1);
  border-radius: var(--base-size);
  align-self: stretch;
  max-width: calc(var(--base-size) * 100);
  height: calc(var(--base-size) * 40);
  display: grid;
  gap: calc(var(--base-size) * 0);
  align-content: flex-start;
  border: solid hsla(var(--clr-light-700), 1) calc(var(--base-size) * 2);
  font-weight: 200;
  overflow: auto;
}
.darkmode .calculation > .wrapper {
  background-color: hsla(var(--clr-dark-200), 1);
  border-color: hsla(var(--clr-dark-200), 1);
}
.calculation > .wrapper > .content > .line {
  display: block;
}
.calculation > .wrapper > .content > .line.essencial {
  font-size: 1.2rem;
  margin-bottom: 1rem;
  margin-top: 0.5rem;
  font-weight: 500;
}
.calculation > .wrapper > .content > .line.break {
  margin-top: 3rem;
}
.calculation > .wrapper > .content > .line.winner {
  font-size: 2rem;
  margin-bottom: 0.5rem;
  font-weight: 900;
  margin-top: 0.5rem;
}
.calculation > .wrapper > .content > .line.winner::before, .calculation > .wrapper > .content > .line.winner::after {
  font-size: 1rem;
  font-weight: 100;
  transform: translateY(-0.5rem);
  display: inline-block;
}
.calculation > .wrapper > .content > .line.winner::before {
  content: "(ﾉ◕ヮ◕)ﾉ :･ﾟ✧";
}
.calculation > .wrapper > .content > .line.winner::after {
  content: "✧ﾟ･: ヽ(◕ヮ◕ヽ)";
}
.calculation > .wrapper > .content > .line::after {
  content: "";
}
.calculation > .wrapper > .content > .line.loading::after {
  animation: dots 500ms linear infinite;
}
.calculation .buttons {
  display: flex;
  gap: calc(var(--base-size) * 1);
}

@keyframes dots {
  0% {
    content: "";
  }
  25% {
    content: ".";
  }
  50% {
    content: "..";
  }
  75% {
    content: "...";
  }
}
.header {
  grid-template-columns: 1fr auto;
  grid-template-areas: "logo profile" "nav nav";
  gap: calc(var(--base-size) * 1) calc(var(--base-size) * 4);
  z-index: 10;
}
@media only screen and (min-width: 40em) {
  .header {
    grid-template-columns: 1fr auto auto;
    grid-template-areas: "logo nav profile";
  }
}

.nav {
  grid-area: nav;
}

.logo {
  display: grid;
  align-content: center;
  grid-area: logo;
}

.profile {
  position: relative;
  cursor: pointer;
  grid-area: profile;
  z-index: 100;
  align-self: center;
}
.profile > .short {
  position: relative;
}
.profile > .short > .profile--picture {
  border-radius: var(--base-size);
  max-height: calc(var(--base-size) * 6);
  max-width: calc(var(--base-size) * 6);
  z-index: 1;
  position: relative;
  /*
  box-shadow: 0 0 0 var(--border-width) hsla(var(--clr-accent-300), .5);
  .darkmode & {
    //box-shadow: 0 0 0 var(--border-width) hsla(var(--clr-light-800), .2);
    box-shadow: 0 0 0 var(--border-width) hsla(var(--clr-accent-600), .5);
  }
  */
}
.profile > .short > .dropdown {
  text-align: center;
  position: absolute;
  left: 0;
  right: 0;
  top: calc(100% - var(--base-size) * 3);
  transition: 150ms ease-in;
}
.profile > .short:hover > .dropdown, .profile > .short:focus > .dropdown, .profile > .short:focus-within > .dropdown, .profile > .short.open > .dropdown {
  top: calc(100% - var(--base-size) * 1);
}
.profile > .info {
  --border-color: hsla(var(--clr-dark-200), 1);
  --text-color: hsla(var(--clr-dark-100), 1);
  --bg-color: hsla(var(--clr-light-600), 1);
  cursor: auto;
  font-weight: 400;
  position: absolute;
  right: 0;
  top: calc(100% + var(--base-size) * 2);
  color: var(--text-color);
  border: solid var(--border-width) var(--border-color);
  background-color: var(--bg-color);
  border-radius: var(--base-size);
  padding: var(--base-size) 0;
  width: max-content;
  min-width: 8rem;
  max-width: calc(100vw - var(--wrapper-padding) * 2 - 8px);
}
.darkmode .profile > .info {
  --border-color: hsla(var(--clr-dark-600), 1);
  --text-color: hsla(var(--clr-light-800), 1);
  --bg-color: hsla(var(--clr-dark-300), 1);
}
.profile > .info > .list {
  gap: 0;
}
.profile > .info > .list:not(:last-of-type)::after {
  content: "";
  width: 100%;
  height: calc(var(--border-width) * .5);
  background-color: var(--border-color);
  opacity: 0.3;
}
.darkmode .profile > .info > .list:not(:last-of-type)::after {
  opacity: 0.8;
}
.profile > .info > .list > ul {
  display: grid;
  gap: calc(var(--base-size) * 1);
  justify-items: left;
  align-items: center;
  padding: var(--base-size) 0;
}
.profile > .info > .list > ul > li {
  padding: 0 calc(var(--base-size) * 2);
}

/* version 1

@use '../layout/item.scss' as *;

.profile {
  position: relative;
  cursor: pointer;


  & > .short {
    display: grid;
    //grid-template-columns: auto auto;
    align-items: center;
    border-radius: var(--base-size);
    //background-color: hsla(var(--clr-accent-700), 1);
    //gap: calc(var(--base-size) * 2);

    & > .profile--picture {
      border-radius: var(--base-size);
      overflow: hidden;
      max-height: calc(var(--base-size) * 6);
      max-width: calc(var(--base-size) * 6);
      transform: translateY(calc(var(--base-size) * 2.75));
      transition: 150ms ease-in;
      z-index: 1;
    }

    & > .dropdown {
      padding-top: var(--base-size);
      transform: translateY(calc(var(--base-size) * -2.75));
      transition: 150ms ease-in;
      background-color: hsla(var(--clr-accent-700), 1);
      text-align: center;
      border-bottom-left-radius: var(--base-size);
      border-bottom-right-radius: var(--base-size);
    }

    &:hover {
      & > .profile--picture {
        transform: translateY(calc(var(--base-size) * .5));
      }
      & > .dropdown {
        transform: translateY(calc(var(--base-size) * -.5));
      }
    }
  }

  & > .info {
    position: absolute;
    right: 0;
    top: calc(100% + var(--base-size));
  }
}*/

/*# sourceMappingURL=all.css.map */
